-- To run: ./run.sh
-- Or: sqlite3 summary.db < summary.SQL.txt > summary.OUT.txt

-- Setup
.headers on
.separator ','

CREATE table annual2012
(
	zcta int,
	JobsTotal int,
	JobsAgriculture int,
	--JobsAutomotive int,
	JobsEntertainment int,
	JobsConstruction int,
	JobsHealthcare int,
	JobsManufacturing int,
	JobsProfessional int,
	JobsRealestate int,
	JobsTrade int,
	JobsTransport int,
	Population int,
	Poverty int,
	Poverty_Under18 int,
	Poverty_18to65 int,
	Poverty_Over65 int,
	Education int,
	Work_Experience int,
	Working_Fulltime int,
	Working_Fulltime_Poverty int,
	y int
);
.mode csv
.import ../../../community-forecasting/data/2012/2012_zcta_sm.csv annual2012

CREATE table annual2013
(
	zcta int,
	JobsTotal int,
	JobsAgriculture int,
	--JobsAutomotive int,
	JobsEntertainment int,
	JobsConstruction int,
	JobsHealthcare int,
	JobsManufacturing int,
	JobsProfessional int,
	JobsRealestate int,
	JobsTrade int,
	JobsTransport int,
	Population int,
	Poverty int,
	Poverty_Under18 int,
	Poverty_18to65 int,
	Poverty_Over65 int,
	Education int,
	Work_Experience int,
	Working_Fulltime int,
	Working_Fulltime_Poverty int,
	y int
);
.mode csv
.import ../../../community-forecasting/data/2013/2013_zcta_sm.csv annual2013

CREATE table annual2014
(
	zcta int,
	JobsTotal int,
	JobsAgriculture int,
	--JobsAutomotive int,
	JobsEntertainment int,
	JobsConstruction int,
	JobsHealthcare int,
	JobsManufacturing int,
	JobsProfessional int,
	JobsRealestate int,
	JobsTrade int,
	JobsTransport int,
	Population int,
	Poverty int,
	Poverty_Under18 int,
	Poverty_18to65 int,
	Poverty_Over65 int,
	Education int,
	Work_Experience int,
	Working_Fulltime int,
	Working_Fulltime_Poverty int,
	y int
);
.mode csv
.import ../../../community-forecasting/data/2014/2014_zcta_sm.csv annual2014

CREATE table annual2015
(
	zcta int,
	JobsTotal int,
	JobsAgriculture int,
	--JobsAutomotive int,
	JobsEntertainment int,
	JobsConstruction int,
	JobsHealthcare int,
	JobsManufacturing int,
	JobsProfessional int,
	JobsRealestate int,
	JobsTrade int,
	JobsTransport int,
	Population int,
	Poverty int,
	Poverty_Under18 int,
	Poverty_18to65 int,
	Poverty_Over65 int,
	Education int,
	Work_Experience int,
	Working_Fulltime int,
	Working_Fulltime_Poverty int,
	y int
);
.mode csv
.import ../../../community-forecasting/data/2015/2015_zcta_sm.csv annual2015

CREATE table annual2016
(
	zcta int,
	JobsTotal int,
	JobsAgriculture int,
	--JobsAutomotive int,
	JobsEntertainment int,
	JobsConstruction int,
	JobsHealthcare int,
	JobsManufacturing int,
	JobsProfessional int,
	JobsRealestate int,
	JobsTrade int,
	JobsTransport int,
	Population int,
	Poverty int,
	Poverty_Under18 int,
	Poverty_18to65 int,
	Poverty_Over65 int,
	Education int,
	Work_Experience int,
	Working_Fulltime int,
	Working_Fulltime_Poverty int,
	y int
);
.mode csv
.import ../../../community-forecasting/data/2016/2016_zcta_sm.csv annual2016

-------------

create table summary2012 as
select
	'2012' AS Year,
	CAST(sum(JobsTotal) AS INT) Jobs,
	CAST(sum(JobsAgriculture) AS INT) JobsAgriculture,
	--CAST(sum(JobsAutomotive) AS INT) JobsAutomotive,
	CAST(sum(JobsEntertainment) AS INT) JobsEntertainment,
	CAST(sum(JobsConstruction) AS INT) JobsConstruction,
	CAST(sum(JobsHealthcare) AS INT) JobsHealthcare,
	CAST(sum(JobsManufacturing) AS INT) JobsManufacturing,
	CAST(sum(JobsProfessional) AS INT) JobsProfessional,
	CAST(sum(JobsRealestate) AS INT) JobsRealestate,
	CAST(sum(JobsTrade) AS INT) JobsTrade,
	CAST(sum(JobsTransport) AS INT) JobsTransport,
	CAST(sum(Population) AS INT) Population,
	CAST(sum(Poverty) AS INT) Poverty,
	CAST(sum(Poverty_Under18) AS INT) Poverty_Under18,
	CAST(sum(Poverty_18to65) AS INT) Poverty_18to65,
	CAST(sum(Poverty_Over65) AS INT) Poverty_Over65,
	CAST(sum(Education) AS INT) Education,
	CAST(sum(Work_Experience) AS INT) Work_Experience,
	CAST(sum(Working_Fulltime) AS INT) Working_Fulltime,
	CAST(sum(Working_Fulltime_Poverty) AS INT) Working_Fulltime_Poverty
from annual2012
;
--convert to csv
.mode csv
.output ../../../community-forecasting/data/2012/2012_summary.csv
select * from summary2012;
.output stdout


create table summary2013 as
select
	'2013' AS Year,
	CAST(sum(JobsTotal) AS INT) Jobs,
	CAST(sum(JobsAgriculture) AS INT) JobsAgriculture,
	--CAST(sum(JobsAutomotive) AS INT) JobsAutomotive,
	CAST(sum(JobsEntertainment) AS INT) JobsEntertainment,
	CAST(sum(JobsConstruction) AS INT) JobsConstruction,
	CAST(sum(JobsHealthcare) AS INT) JobsHealthcare,
	CAST(sum(JobsManufacturing) AS INT) JobsManufacturing,
	CAST(sum(JobsProfessional) AS INT) JobsProfessional,
	CAST(sum(JobsRealestate) AS INT) JobsRealestate,
	CAST(sum(JobsTrade) AS INT) JobsTrade,
	CAST(sum(JobsTransport) AS INT) JobsTransport,
	CAST(sum(Population) AS INT) Population,
	CAST(sum(Poverty) AS INT) Poverty,
	CAST(sum(Poverty_Under18) AS INT) Poverty_Under18,
	CAST(sum(Poverty_18to65) AS INT) Poverty_18to65,
	CAST(sum(Poverty_Over65) AS INT) Poverty_Over65,
	CAST(sum(Education) AS INT) Education,
	CAST(sum(Work_Experience) AS INT) Work_Experience,
	CAST(sum(Working_Fulltime) AS INT) Working_Fulltime,
	CAST(sum(Working_Fulltime_Poverty) AS INT) Working_Fulltime_Poverty
from annual2013
;
--convert to csv
.mode csv
.output ../../../community-forecasting/data/2013/2013_summary.csv
select * from summary2013;
.output stdout


create table summary2014 as
select
	'2014' AS Year,
	CAST(sum(JobsTotal) AS INT) Jobs,
	CAST(sum(JobsAgriculture) AS INT) JobsAgriculture,
	--CAST(sum(JobsAutomotive) AS INT) JobsAutomotive,
	CAST(sum(JobsEntertainment) AS INT) JobsEntertainment,
	CAST(sum(JobsConstruction) AS INT) JobsConstruction,
	CAST(sum(JobsHealthcare) AS INT) JobsHealthcare,
	CAST(sum(JobsManufacturing) AS INT) JobsManufacturing,
	CAST(sum(JobsProfessional) AS INT) JobsProfessional,
	CAST(sum(JobsRealestate) AS INT) JobsRealestate,
	CAST(sum(JobsTrade) AS INT) JobsTrade,
	CAST(sum(JobsTransport) AS INT) JobsTransport,
	CAST(sum(Population) AS INT) Population,
	CAST(sum(Poverty) AS INT) Poverty,
	CAST(sum(Poverty_Under18) AS INT) Poverty_Under18,
	CAST(sum(Poverty_18to65) AS INT) Poverty_18to65,
	CAST(sum(Poverty_Over65) AS INT) Poverty_Over65,
	CAST(sum(Education) AS INT) Education,
	CAST(sum(Work_Experience) AS INT) Work_Experience,
	CAST(sum(Working_Fulltime) AS INT) Working_Fulltime,
	CAST(sum(Working_Fulltime_Poverty) AS INT) Working_Fulltime_Poverty
from annual2014
;
--convert to csv
.mode csv
.output ../../../community-forecasting/data/2014/2014_summary.csv
select * from summary2014;
.output stdout


create table summary2015 as
select
	'2015' AS Year,
	CAST(sum(JobsTotal) AS INT) Jobs,
	CAST(sum(JobsAgriculture) AS INT) JobsAgriculture,
	--CAST(sum(JobsAutomotive) AS INT) JobsAutomotive,
	CAST(sum(JobsEntertainment) AS INT) JobsEntertainment,
	CAST(sum(JobsConstruction) AS INT) JobsConstruction,
	CAST(sum(JobsHealthcare) AS INT) JobsHealthcare,
	CAST(sum(JobsManufacturing) AS INT) JobsManufacturing,
	CAST(sum(JobsProfessional) AS INT) JobsProfessional,
	CAST(sum(JobsRealestate) AS INT) JobsRealestate,
	CAST(sum(JobsTrade) AS INT) JobsTrade,
	CAST(sum(JobsTransport) AS INT) JobsTransport,
	CAST(sum(Population) AS INT) Population,
	CAST(sum(Poverty) AS INT) Poverty,
	CAST(sum(Poverty_Under18) AS INT) Poverty_Under18,
	CAST(sum(Poverty_18to65) AS INT) Poverty_18to65,
	CAST(sum(Poverty_Over65) AS INT) Poverty_Over65,
	CAST(sum(Education) AS INT) Education,
	CAST(sum(Work_Experience) AS INT) Work_Experience,
	CAST(sum(Working_Fulltime) AS INT) Working_Fulltime,
	CAST(sum(Working_Fulltime_Poverty) AS INT) Working_Fulltime_Poverty
from annual2015
;
--convert to csv
.mode csv
.output ../../../community-forecasting/data/2015/2015_summary.csv
select * from summary2015;
.output stdout


create table summary2016 as
select
	'2016' AS Year,
	CAST(sum(JobsTotal) AS INT) Jobs,
	CAST(sum(JobsAgriculture) AS INT) JobsAgriculture,
	--CAST(CAST(sum(JobsAutomotive) AS INT) JobsAutomotive,
	CAST(sum(JobsEntertainment) AS INT) JobsEntertainment,
	CAST(sum(JobsConstruction) AS INT) JobsConstruction,
	CAST(sum(JobsHealthcare) AS INT) JobsHealthcare,
	CAST(sum(JobsManufacturing) AS INT) JobsManufacturing,
	CAST(sum(JobsProfessional) AS INT) JobsProfessional,
	CAST(sum(JobsRealestate) AS INT) JobsRealestate,
	CAST(sum(JobsTrade) AS INT) JobsTrade,
	CAST(sum(JobsTransport) AS INT) JobsTransport,
	CAST(sum(Population) AS INT) Population,
	CAST(sum(Poverty) AS INT) Poverty,
	CAST(sum(Poverty_Under18) AS INT) Poverty_Under18,
	CAST(sum(Poverty_18to65) AS INT) Poverty_18to65,
	CAST(sum(Poverty_Over65) AS INT) Poverty_Over65,
	CAST(sum(Education) AS INT) Education,
	CAST(sum(Work_Experience) AS INT) Work_Experience,
	CAST(sum(Working_Fulltime) AS INT) Working_Fulltime,
	CAST(sum(Working_Fulltime_Poverty) AS INT) Working_Fulltime_Poverty
from annual2016
;
--convert to csv
.mode csv
.output ../../../community-forecasting/data/2016/2016_summary.csv
select * from summary2016;
.output stdout

create view allyears as
select * FROM summary2012 UNION
select * FROM summary2013 UNION
select * FROM summary2014 UNION
select * FROM summary2015 UNION
select * FROM summary2016;
--convert to csv
.mode csv
.output ../../../community-forecasting/data/summary/summary.csv
select * from allyears;
.output stdout

drop table if exists annual2012;
drop table if exists annual2013;
drop table if exists annual2014;
drop table if exists annual2015;
drop table if exists annual2016;
drop table if exists summary2012;
drop table if exists summary2013;
drop table if exists summary2014;
drop table if exists summary2015;
drop table if exists summary2016;
DROP VIEW allyears;


